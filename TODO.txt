- Overload constructors to implement default values for some arguments (maybe)
- In process, all functions if possible need to accept as argument: object,
    List, array 
- Override the toString() of your classes, as specified here
  http://stackoverflow.com/questions/13001427/printing-out-all-the-objects-in-array-list
- implement a better, cleaner, way to overload your constructor, maybe use a factory as suggested in effective java
- implement the copy constructor in your classes!
- implement process methods inside classes if possible
- more xInversion modes that work on current order of notes and not based on originalNotes
- a Theory class, which would be a set of rules, like what scales are available on different modes, so the computer can pick one; it should be aware of the melody of past measures (up to x measures?), aware of what's next, etc
- javadoc comments using /** */ delimitators, and arroba for comments on parameters and return values
-personalize javadoc 
- include all you can from systematic program design to the javadoc comments
- make all parameters clearer by avoiding the use of short names, use comple
names and use this if conflicts are found
- change the names and implementations of the formulas to constants: that 
means they are final and will be written in mayus
- implementa note namer in the note class that will name the note based in its
frequency 
- copy constructors (to make copies of classes), and javadoc them.
- default constructors that take no arguments (until you read about factories)
- organize everything in packages (asap)
- consider implementing java generics (<Item>) like seen in Algorithms 1 Stanford 
to handle different types in classes
